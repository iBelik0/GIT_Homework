GIT Homework 1

Для выполнения задания у вас должен быть установлен для Windows - GitBash.
Создан аккаунт в GitHub

Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.

Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

JSON
 4. Создать внешний репозиторий c названием JSON. - Done
 5. Клонировать репозиторий JSON на локальный компьютер. - git clone https://github.com/iBelik0/JSON.git
 6. Внутри локального JSON создать файл “new.json”. - touch new.json
 7. Добавить файл под гит. - git add new.json
 8. Закоммитить файл. - git commit -m "new.json"
 9. Отправить файл на внешний GitHub репозиторий. - git push 
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON. 
  - vim new.json
 11. Отправить изменения на внешний репозиторий. 
  git commit -m "new.json" 
  git push 
 12. Создать файл preferences.json - touch preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON. - 
  vim preferences.json
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
  touch skills.json
  vim skills.json
 15. Отправить сразу 2 файла на внешний репозиторий. -
  git add 
  git commit -m +
  git push
 16. На веб интерфейсе создать файл bug_report.json. - Done
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. - Done
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON. Done
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе. - Done
 20. Синхронизировать внешний и локальный репозиторий JSON - git pull

XML
 21. Создать внешний репозиторий c названием XML. - Done
 22. Клонировать репозиторий XML на локальный компьютер. - git clone https://github.com/iBelik0/XML.git
 23. Внутри локального XML создать файл “new.xml”. - touch new.xml
 24. Добавить файл под гит. - git add new.xml
 25. Закоммитить файл. - git commit -m "add new.xml"
 26. Отправить файл на внешний GitHub репозиторий. - git push 
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML. vim new.xml
 28. Отправить изменения на внешний репозиторий.
  git commit 
  git push
 29. Создать файл preferences.xml - touch preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML. vim
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML - vim skills.xml
 32. Сделать коммит в одну строку. - git commit -am "preferences.xml" "skills.xml"
 33. Отправить сразу 2 файла на внешний репозиторий. - git push .
 34. На веб интерфейсе создать файл bug_report.xml. - Done
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе. - Done
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML. - Done
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе. - Done
 38. Синхронизировать внешний и локальный репозиторий XML - git pull

TXT
 39. Создать внешний репозиторий c названием TXT. - Done
 40. Клонировать репозиторий TXT на локальный компьютер. - git clone https://github.com/iBelik0/txt.git
 41. Внутри локального TXT создать файл “new.txt”. - touch new.txt
 42. Добавить файл под гит. - git add new.txt
 43. Закоммитить файл. - git commit -m "Add new.txt"
 44. Отправить файл на внешний GitHub репозиторий. - git push
 45. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT. 
  vim new.txt
 46. Отправить изменения на внешний репозиторий.
  git commit
  git push
 47. Создать файл preferences.txt - touch preferences.txt
 48. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT. 
  vim preferences.txt
 49. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT - touch skills.txt
 50. Сделать коммит в одну строку. - git commit -am "preferences.txt" "skills.txt"
 51. Отправить сразу 2 файла на внешний репозиторий. - git push
 52. На веб интерфейсе создать файл bug_report.txt. - Done
 53. Сделать Commit changes (сохранить) изменения на веб интерфейсе. - Done
 54. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT. - Done
 55. Сделать Commit changes (сохранить) изменения на веб интерфейсе. - Done
 56. Синхронизировать внешний и локальный репозиторий TXT - git pull

*Done - Пометка об выполнении задания на внешнем репозитории*